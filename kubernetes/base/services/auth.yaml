apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: mankahi
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "3001"
    spec:
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
              name: http
            - containerPort: 9090
              name: metrics
          env:
            # Config values
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: NODE_ENV
            - name: PORT
              value: "3001"
            - name: AUTH_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: AUTH_SERVICE_URL
            - name: FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: FRONTEND_URL
            - name: RATE_LIMIT_WINDOW
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RATE_LIMIT_WINDOW
            - name: RATE_LIMIT_MAX_REQUESTS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RATE_LIMIT_MAX_REQUESTS
            - name: CORS_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: CORS_ORIGIN
            # Secret values
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_SECRET
            - name: JWT_ACCESS_EXPIRES_IN
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_ACCESS_EXPIRES_IN
            - name: JWT_REFRESH_EXPIRES_IN
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: JWT_REFRESH_EXPIRES_IN
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: SESSION_SECRET
            - name: GOOGLE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: GOOGLE_CLIENT_ID
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: GOOGLE_CLIENT_SECRET
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_URL
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/mankahi_auth"
              # Database credentials injection
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: POSTGRES_PASSWORD
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: mankahi
spec:
  selector:
    app: auth-service
  ports:
    - name: http
      port: 3001
      targetPort: http
    - name: metrics
      port: 9090
      targetPort: metrics
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: auth-service-monitor
  namespace: mankahi
  labels:
    app: auth-service
spec:
  selector:
    matchLabels:
      app: auth-service
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
  namespaceSelector:
    matchNames:
      - mankahi
