apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: mankahi
type: Opaque
stringData:
  # JWT Configuration 
  JWT_SECRET: "<your-64-character-jwt-secret>"
  JWT_ACCESS_EXPIRES_IN: "1h"
  JWT_REFRESH_EXPIRES_IN: "7d"
  
  # Session Configuration
  SESSION_SECRET: "<your-64-character-session-secret>"
  
  # OAuth Configuration
  GOOGLE_CLIENT_ID: "<your-google-client-id>"
  GOOGLE_CLIENT_SECRET: "<your-google-client-secret>"
  GOOGLE_CALLBACK_URL: "http://localhost:3001/api/auth/google/callback"
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
  namespace: mankahi
type: Opaque
stringData:
  # Database Configuration
  POSTGRES_USER: "dev_user"
  POSTGRES_PASSWORD: "<your-secure-password>"
  POSTGRES_DB: "mankahi_db"
  # Using k8s service discovery
  DATABASE_URL: "postgresql://dev_user:<your-secure-password>@postgres-service.mankahi.svc.cluster.local:5432/mankahi_db"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: mankahi
type: Opaque
stringData:
  # Redis Configuration
  REDIS_URL: "redis://redis-service.mankahi.svc.cluster.local:6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-secrets
  namespace: mankahi
type: Opaque
stringData:
  # MinIO Configuration
  MINIO_ROOT_USER: "<your-minio-user>"
  MINIO_ROOT_PASSWORD: "<your-minio-password>"
  MINIO_ACCESS_KEY: "<your-minio-access-key>"
  MINIO_SECRET_KEY: "<your-minio-secret-key>"
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-secrets
  namespace: mankahi
type: Opaque
stringData:
  # Elasticsearch Configuration
  ELASTICSEARCH_USERNAME: "elastic"
  ELASTICSEARCH_PASSWORD: "<your-elastic-password>"

# INSTRUCTIONS:
# 1. Copy this file to secrets.yaml
# 2. Replace all placeholder values (enclosed in <...>)
# 3. Ensure secrets.yaml is in .gitignore
# 4. Never commit actual secrets to version control
