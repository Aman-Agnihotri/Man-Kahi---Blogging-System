services:
    # PostgreSQL
    postgres:
        image: postgres:16-alpine
        container_name: mankahi-postgres
        environment:
            POSTGRES_USER: hunterhhh412
            POSTGRES_PASSWORD: Ag9696940226
            POSTGRES_MULTIPLE_DATABASES: mankahi_auth,mankahi_blog
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./docker/postgres:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U hunterhhh412"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis
    redis:
        image: redis:alpine
        container_name: mankahi-redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        command: redis-server --appendonly yes
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Elasticsearch
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
        container_name: mankahi-elasticsearch
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9200"]
            interval: 30s
            timeout: 10s
            retries: 5
        ulimits:
            memlock:
                soft: -1
                hard: -1

    # Auth Service
    auth-service:
        build:
            context: ./backend/auth-service
            target: development
        container_name: mankahi-auth
        ports:
            - "3001:3001"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        environment:
            NODE_ENV: development
            PORT: 3001
            DATABASE_URL: postgres://hunterhhh412:Ag9696940226@postgres:5432/mankahi_auth
            REDIS_URL: redis://redis:6379
            JWT_SECRET: your-secret-key-at-least-32-chars
            JWT_EXPIRES_IN: 24h
            RATE_LIMIT_WINDOW: 900
            RATE_LIMIT_MAX_REQUESTS: 100
            CORS_ORIGIN: http://localhost:3000
        volumes:
            - ./backend/auth-service:/app
            - /app/node_modules
        command: npm run dev

    # Blog Service
    blog-service:
        build:
            context: ./backend/blog-service
            target: development
        container_name: mankahi-blog
        ports:
            - "3002:3002"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            elasticsearch:
                condition: service_healthy
        environment:
            NODE_ENV: development
            PORT: 3002
            DATABASE_URL: postgres://hunterhhh412:Ag9696940226@postgres:5432/mankahi_blog
            REDIS_URL: redis://redis:6379
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_INDEX_SHARDS: 3
            ELASTICSEARCH_INDEX_REPLICAS: 1
            AUTH_SERVICE_URL: http://auth-service:3001
            RATE_LIMIT_WINDOW: 900
            RATE_LIMIT_MAX_REQUESTS: 100
            CORS_ORIGIN: http://localhost:3000
            BLOG_CACHE_TTL: 3600
            SEARCH_CACHE_TTL: 300
            ANALYTICS_CACHE_TTL: 60
            MAX_FILE_SIZE: 5242880
            ALLOWED_IMAGE_TYPES: "image/jpeg,image/png,image/webp"
        volumes:
            - ./backend/blog-service:/app
            - /app/node_modules
            - blog-uploads:/app/uploads
        command: npm run dev

    # Frontend (Nuxt)
    frontend:
        build: ./frontend
        container_name: mankahi-frontend
        ports:
            - "3000:3000"
        depends_on:
            - auth-service
            - blog-service
        volumes:
            - ./frontend:/app
            - /app/node_modules
        command: npm run dev

    # API Gateway
    nginx:
        image: nginx:latest
        container_name: mankahi-nginx
        ports:
            - "80:80"
        depends_on:
            - frontend
            - auth-service
            - blog-service
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - blog-uploads:/var/www/uploads
        healthcheck:
            test: ["CMD", "nginx", "-t"]
            interval: 30s
            timeout: 10s
            retries: 3

volumes:
    postgres-data:
    redis-data:
    elasticsearch-data:
    blog-uploads:
