services:
    # PostgreSQL
    postgres:
        image: postgres:16-alpine
        container_name: mankahi-postgres
        env_file:
            - ../../.env
            - ../../.env.development
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ../postgres:/docker-entrypoint-initdb.d
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U hunterhhh412"]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis
    redis:
        image: redis:alpine
        container_name: mankahi-redis
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        command: redis-server --appendonly yes
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    # MinIO
    minio:
        image: minio/minio
        container_name: mankahi-minio
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - ../../.env
            - ../../.env.development
        volumes:
            - minio-data:/data
        command: server /data --console-address ":9001"
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 30s
            timeout: 20s
            retries: 3

    # Elasticsearch
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
        container_name: mankahi-elasticsearch
        env_file:
            - ../../.env
            - ../../.env.development
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9200"]
            interval: 30s
            timeout: 10s
            retries: 5
        ulimits:
            memlock:
                soft: -1
                hard: -1

    # Auth Service
    auth-service:
        build:
            context: ../../backend
            dockerfile: auth-service/Dockerfile
            target: ${NODE_ENV}
        container_name: mankahi-auth
        ports:
            - "3001:3001"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        env_file:
            - ../../.env
            - ../../.env.development
        volumes:
            - ../../backend/auth-service:/app/auth-service
            - ../../backend/shared:/app/shared
            - /app/auth-service/node_modules
        command: npm run dev
        working_dir: /app/auth-service

    # Blog Service
    blog-service:
        build:
            context: ../../backend
            dockerfile: blog-service/Dockerfile
            target: ${NODE_ENV}
        container_name: mankahi-blog
        ports:
            - "3002:3002"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            elasticsearch:
                condition: service_healthy
        env_file:
            - ../../.env
            - ../../.env.development
        environment:
            - PORT=3002
        volumes:
            - ../../backend/blog-service:/app/blog-service
            - ../../backend/shared:/app/shared
            - /app/blog-service/node_modules
            - blog-uploads:/app/blog-service/uploads
        command: npm run dev
        working_dir: /app/blog-service

    # Frontend (Nuxt)
    frontend:
        build:
            context: ../../frontend
            target: ${NODE_ENV}
        container_name: mankahi-frontend
        ports:
            - "3000:3000"
        depends_on:
            - auth-service
            - blog-service
        env_file:
            - ../../.env
            - ../../.env.development
        environment:
            - NUXT_PUBLIC_API_URL=http://localhost:80
        volumes:
            - ../../frontend:/app
            - /app/node_modules
        command: npm run dev

    # API Gateway
    nginx:
        image: nginx:latest
        container_name: mankahi-nginx
        ports:
            - "80:80"
        depends_on:
            - frontend
            - auth-service
            - blog-service
        volumes:
            - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ../nginx/cors.conf:/etc/nginx/cors.conf:ro
            - blog-uploads:/var/www/uploads
        healthcheck:
            test: ["CMD", "nginx", "-t"]
            interval: 30s
            timeout: 10s
            retries: 3

    # Analytics Service
    analytics-service:
        build:
            context: ../../backend
            dockerfile: analytics-service/Dockerfile
            target: ${NODE_ENV}
        container_name: mankahi-analytics
        ports:
            - "3003:3003"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        env_file:
            - ../../.env
            - ../../.env.development
        environment:
            - PORT=3003
        volumes:
            - ../../backend/analytics-service:/app/analytics-service
            - ../../backend/shared:/app/shared
            - /app/analytics-service/node_modules
            - analytics-logs:/app/analytics-service/logs
        command: npm run dev
        working_dir: /app/analytics-service

    # Admin Service
    admin-service:
        build:
            context: ../../backend
            dockerfile: admin-service/Dockerfile
            target: ${NODE_ENV}
        container_name: mankahi-admin
        ports:
            - "3004:3004"
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
            analytics-service:
                condition: service_started
        env_file:
            - ../../.env
            - ../../.env.development
        environment:
            - PORT=3004
        volumes:
            - ../../backend/admin-service:/app/admin-service
            - ../../backend/shared:/app/shared
            - /app/admin-service/node_modules
            - admin-logs:/app/admin-service/logs
        command: npm run dev
        working_dir: /app/admin-service

volumes:
    postgres-data:
    redis-data:
    elasticsearch-data:
    minio-data:
    blog-uploads:
    analytics-logs:
    admin-logs:
