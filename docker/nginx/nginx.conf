user nginx;
# Auto-detect number of CPU cores
worker_processes auto;
# Logs
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize worker configuration
events {
    worker_connections 10000;  # Increased for high traffic
    use epoll;                # Efficient event processing
    multi_accept on;          # Accept multiple connections
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Optimize file transmission
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Timeouts
    keepalive_timeout 65;
    keepalive_requests 100;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Optimize buffers
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    
    # File descriptors cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main buffer=16k;

    # Gzip compression
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/x-javascript
        application/javascript
        application/xml
        application/xml+rss
        application/x-protobuf
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/svg+xml
        image/x-icon;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=blog_limit:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=search_limit:10m rate=20r/s;

    # Cache zones
    proxy_cache_path /var/cache/nginx/blog_cache levels=1:2 keys_zone=blog_cache:100m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static_cache levels=1:2 keys_zone=static_cache:50m max_size=2g inactive=30m use_temp_path=off;

    # Upstream definitions with backup servers
    upstream frontend {
        server frontend:3000;
        keepalive 32;
    }

    upstream auth_service {
        server auth-service:3001;
        keepalive 32;
    }

    upstream blog_service {
        server blog-service:3002;
        keepalive 32;
    }

    upstream analytics_service {
        server analytics-service:3003;
        keepalive 32;
    }

    upstream admin_service {
        server admin-service:3004;
        keepalive 32;
    }

    # Server configuration
    server {
        listen 80;
        server_name localhost;
        
        # Enable response caching
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_min_uses 3;
        proxy_cache_background_update on;
        proxy_cache_lock on;

        # Health Check Routes - No rate limiting or caching for health checks
        location /api/auth/health {
            proxy_pass http://auth_service/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            include /etc/nginx/cors.conf;
        }

        # Blog Service Health Check
        location = /api/blogs/health {
            proxy_pass http://blog_service/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            include /etc/nginx/cors.conf;
        }

        location /api/analytics/health {
            proxy_pass http://analytics_service/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            include /etc/nginx/cors.conf;
        }

        location /api/admin/health {
            proxy_pass http://admin_service/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            include /etc/nginx/cors.conf;
        }

        # Frontend static content
        location /static/ {
            proxy_cache static_cache;
            proxy_cache_valid 200 60m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_ignore_headers Cache-Control;
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            expires 1h;
        }

        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
        }

        # Auth Service
        location /api/auth/ {
            limit_req zone=auth_limit burst=10 nodelay;
            proxy_pass http://auth_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            include /etc/nginx/cors.conf;
        }

        # Blog Service - Read operations (excluding health check)
        location ~ ^/api/blogs/(?!create|update|delete|health) {
            limit_req zone=blog_limit burst=50;
            proxy_cache blog_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://blog_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            include /etc/nginx/cors.conf;
        }

        # Blog Service - Write operations
        location ~ ^/api/blogs/(create|update|delete) {
            limit_req zone=blog_limit burst=20 nodelay;
            proxy_pass http://blog_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            include /etc/nginx/cors.conf;
        }

        # Blog Search
        location /api/blogs/search {
            limit_req zone=search_limit burst=30;
            proxy_cache blog_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            add_header X-Cache-Status $upstream_cache_status;
            
            proxy_pass http://blog_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            
            include /etc/nginx/cors.conf;
        }

        # Analytics Service
        location /api/analytics/ {
            limit_req zone=api_limit burst=100 nodelay;
            proxy_pass http://analytics_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            include /etc/nginx/cors.conf;
        }

        # Admin Service
        location /api/admin/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://admin_service;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            include /etc/nginx/cors.conf;
        }

        # Error responses
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
